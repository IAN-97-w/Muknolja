<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<!--  로그인  -->
  <select id="login" resultMap="memberResultSet">
  	select * 
  	from member left join re_img using(id) left join ATTACHED_FILE using (file_id)
  	where id=#{id}
  		  and STATUS = 'Y' 
  	</select>
  	<resultMap type="Member" id="memberResultSet">
  		<id column="ID" property="id"/>
  		<result column="PWD" property="pwd"/>
  		<result column="NAME" property="name"/>
  		<result column="NICKNAME" property="nickName"/>
  		<result column="EMAIL" property="email"/>
  		<result column="ADDRESS" property="address"/>
  		<result column="GENDER" property="gender"/>
  		<result column="ENROLL_DATE" property="enrollDate"/>
  		<result column="MEMBER_TYPE" property="memberType"/>
  		<result column="STATUS" property="status"/>
  		<result column="REPORT" property="report"/>
  		<result column="LAST_VISIT" property="lastVisit"/>
  		<result column="STOP_DATE" property="stopDate"/>
  		<result column="FILE_MODIFY_NAME" property="fileModifyName"/>
  	</resultMap>
  	
  	<insert id="insertM">
  	insert into member
  	values(#{id}, #{pwd}, #{name}, #{nickName}, #{phone}, #{email}, #{address},#{gender}, default, default, default, default, null)
  </insert>
  <insert id="insertMemberH">
  	insert into member
  	values(#{id}, #{pwd}, #{name}, #{nickName}, #{phone}, #{email}, #{address},#{gender}, default, 'D', default, default, null)
  </insert>
  
  	
  	<select id="checkId" resultType="_int">
  	select count(*)
  	from member
  	where USER_ID=#{id}
  		 
  	</select>
  	
  	<select id="selectMyList" resultType="map">
  	select b.BOARD_ID, BOARD_TITLE, CREATE_DATE, BOARD_COUNT
		from BOARD_SCRAP b
		    join board A on b.BOARD_ID = a.BOARD_ID
		    join member m on b.USER_ID = m.USER_ID
		where m.USER_ID = #{id}
		order by b.BOARD_ID DESC
  	</select>
  	
  	<select id="checkEmail" resultType="_int">
  		select count(*)
	  	from member
	  	where email=#{email}
  	</select>
  	
  	<select id="idsol" resultType="_int">
  		select count(*)
	  	from member
	  	where id=#{id}
  	</select>
  	
  	<select id="checkNickName" resultType="_int">
  		select count(*)
	  	from member
	  	where nickname=#{nickName}
  	</select>
  	
  	<select id="selectPwd" resultType="String">
  		select pwd
	  	from member
	  	where id=#{id}
  	</select>
  	<insert id="visitCount">
  		insert into visit
  		values(#{id}, SYSDATE, 
  		<if test='check.equals("m")'>
  			'Y'
  		</if>
  		<if test='check.equals("a")'>
  			'N'
  		</if>
  		)
  	</insert>
  	
  	<select id="selectVisitCounter" resultMap="VisitResutSet">
  		select *
  		from visit
  		where ID = #{id} and to_char(VISIT_TIME, 'yyyymmdd') = to_char(SYSDATE, 'yyyymmdd')
  	</select>
  	
  	<resultMap type="Visit" id="VisitResutSet">
  		<id column="ID" property="id"/>
  		<result column="VISIT_TIME" property="VisitTime"/>
  	</resultMap>
  	
  	<select id="selectVisitToday" resultMap="memberResultSet">
  		select *
  		from member
  			join visit using(id)
  		where to_char(VISIT_TIME, 'yyyymmdd') = to_char(SYSDATE, 'yyyymmdd')
  	</select>
  	
  	<select id="todayCount" resultType="_int">
  		select count(*)
  		from member
  			join visit using(id)
  		where to_char(VISIT_TIME, 'yyyymmdd') = to_char(SYSDATE, 'yyyymmdd')
  	</select>
  	
  	<select id="selectVisitList" resultType="map">
  		select visit_date, visit_count
		from (select to_char(visit_time, 'yy.mm.dd') visit_date, count(*) visit_count
		      from visit
		      where MEMBER_YN = 'Y'
		      GROUP by to_char(visit_time, 'yy.mm.dd')
		      order by visit_date desc)
		where rownum <![CDATA[<=]]> 7
  	</select>
  	
  	<select id="selectVisitAllList" resultType="map">
  		select visit_date, visit_count
		from (select to_char(visit_time, 'yy.mm.dd') visit_date, count(*) visit_count
		      from visit
		      GROUP by to_char(visit_time, 'yy.mm.dd')
		      order by visit_date desc)
		where rownum <![CDATA[<=]]> 7
  	</select>
  	
  	<select id="memberListCount" resultType="_int">
  		select count(*)
  		from member
	    
	    <if test="category != 3">
		    where status = 'Y' and
		    <if test="category == 0">
		    	MEMBER_TYPE = 'N'
		    </if>
		    <if test="category == 1">
		    	MEMBER_TYPE = 'H'
		    </if>
		    <if test="category == 2">
		    	MEMBER_TYPE = 'A'
		    </if>
		    <if test="category == 4">
		    	MEMBER_TYPE = 'D'
		    </if>
	    </if>
	    <if test="category == 3">
	    	where status = 'S'
	    </if>
	    <if test="search != null">
	    	and id LIKE '%'||#{search}||'%'
	    </if>
  	</select>
  	
  	<select id="selectMemberList" resultMap="memberResultSet">
		select id, name, nickname, phone, enroll_date, report, member_type, stop_date, status, max(to_char(visit_time, 'yy-mm-dd')) LAST_VISIT
	    from member
	    left join VISIT using(id)
	    
	    <if test="category != 3">
		    where status = 'Y' and
		    <if test="category == 0">
		    	MEMBER_TYPE = 'N'
		    </if>
		    <if test="category == 1">
		    	MEMBER_TYPE = 'H'
		    </if>
		    <if test="category == 2">
		    	MEMBER_TYPE = 'A'
		    </if>
		    <if test="category == 4">
		    	MEMBER_TYPE = 'D'
		    </if>
	    </if>
	    <if test="category == 3">
	    	where status = 'S'
	    </if>
	    <if test="search != null">
	    	and id LIKE '%'||#{search}||'%'
	    </if>
	    GROUP by (id, name, nickname, phone, enroll_date, report, member_type, stop_date, status)
  	</select>
  	
  	<select id="enrollCount" resultType="map">
  		select enroll_date, member_count
		from (select to_char(enroll_date, 'yy.mm.dd') enroll_date, count(*) member_count
		      from member
		      group by to_char(enroll_date, 'yy.mm.dd')
		      order by enroll_date desc)
		where rownum <![CDATA[<=]]> 7
  	</select>
  	
  	<update id="updateMember">
  		update member
  		set pwd=#{pwd} , NICKNAME=#{nickName}, phone=#{phone}, address=#{address}
  		WHERE ID = #{id}
  	</update>
  	<update id="waring">
  		update member
  		set report = report + 1
  		where id = #{id}
  	</update>
  	
  	<select id="waringCheck" resultType="_int">
  		select REPORT
  		from MEMBER
  		where ID = #{id}
  	</select>
  	
  	<update id="stop">
  		update member
  		set status = 'S', stop_date = sysdate
  		where id = #{id}
  	</update>
  	<update id="changePassword">
  		update member
  		set pwd=#{pwd} 
  		WHERE ID = #{id}
  	</update>
  	<select id="selectEid" resultType="String">
  		select id
  		from member
  		where email=#{email}
  	</select>
  	<select id="bCount" resultType="map">
  		select *
		from (select to_char(BOARD_CREATE_DATE, 'mm.dd') create_date, count(*) count
		      from board
		      group by to_char(BOARD_CREATE_DATE, 'mm.dd')
		      order by create_date desc)
		where rownum <![CDATA[<=]]> 7
  	</select>
  	
  	<select id="boardListCount" resultType="_int">
  		select count(*)
  		from board
  		where board_status = 'Y' and
  		<if test="category == 0">
  			BOARD_TYPE = 'P'
  		</if>
  		<if test="category == 1">
  			BOARD_TYPE = 'R'
  		</if>
  		<if test="search != null">
	    	and BOARD_TITLE LIKE '%'||#{search}||'%'
	    </if>
  	</select>
  	
  	<select id="selectBoardList" resultMap="BoardResultSet">
  		select BOARD_ID, BOARD_WRITER, BOARD_TYPE, BOARD_TITLE, BOARD_CREATE_DATE, count(REPORT_ID) COUNT
  		from board
  			left join report on(BOARD_ID = TARGET_ID)
  		where board_status = 'Y' and
  		<if test="category == 0">
  			BOARD_TYPE = 'P'
  		</if>
  		<if test="category == 1">
  			BOARD_TYPE = 'R'
  		</if>
  		<if test="search != null">
	    	and BOARD_TITLE LIKE '%'||#{search}||'%'
	    </if>
	    group by (BOARD_ID, BOARD_WRITER, BOARD_TYPE, BOARD_TITLE, BOARD_CREATE_DATE)
	    order by board_id desc
  	</select>
  	
  	<resultMap type="Board" id="BoardResultSet">
  		<id column="BOARD_ID" property="boardId"/>
  		<result column="BOARD_WRITER" property="boardWriter"/>
  		<result column="BOARD_TYPE" property="boardType"/>
  		<result column="BOARD_COURSE" property="boardCourse"/>
  		<result column="BOARD_TITLE" property="boardTitle"/>
  		<result column="BOARD_CONTENT" property="boardContent"/>
  		<result column="BOARD_CREATE_DATE" property="createDate"/>
  		<result column="BOARD_MODIFY_DATE" property="modifyDate"/>
  		<result column="BOARD_AREA" property="boardArea"/>
  		<result column="BOARD_STATUS" property="boardStatus"/>
  		<result column="FILE_MODIFY_NAME" property="fileModifyName"/>
  		<result column="COUNT" property="reportCount"/>
  	</resultMap>
  	
  	<resultMap type="AD" id="ADResultSet">
  		<id column="FILE_ID" property="fileId"/>
  		<result column="BOARD_TYPE" property="boardType"/>
  		<result column="AD_PRICE" property="price"/>
  		<result column="START_DATE" property="start"/>
  		<result column="DEADLINE" property="deadline"/>
  	</resultMap>
  	
  	<select id="incomeCount" resultType="map">
  		select start_date, count
		from (select to_char(start_date, 'yy.mm.dd') start_date, sum(ad_price) count
		      from AD
		      group by to_char(start_date, 'yy.mm.dd')
		      order by start_date desc)
		where rownum <![CDATA[<=]]> 7
  	</select>
  	
  	<select id="selectADList" resultMap="ADResultSet">
  		select *
  		from AD
  		where to_char(DEADLINE, 'yymmdd') <![CDATA[>=]]> to_char(sysdate, 'yymmdd')
  		<if test="category == 0">
  			and BOARD_TYPE = 'M'
  		</if>
  		<if test="category == 1">
  			and BOARD_TYPE = 'T'
  		</if>
  		<if test="category == 2">
  			and BOARD_TYPE = 'F'
  		</if>
  		<if test="category == 3">
  			and BOARD_TYPE = 'V'
  		</if>
  		<if test="category == 4">
  			and BOARD_TYPE = 'P'
  		</if>
  		<if test="category == 5">
  			and BOARD_TYPE = 'R'
  		</if>
  		<if test="category == 6">
  			and BOARD_TYPE = 'H'
  		</if>
  		order by START_DATE desc
  	</select>
  	
  	<resultMap type="Reservation" id="reservationResultSet">
		<id column="RESERVATION_ID" property="reservationId"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="HOTEL_ID" property="hotelId"/>
		<result column="HOTEL_NAME" property="hotelName"/>
		<result column="ROOM_ID" property="roomId"/>
		<result column="HOTEL_NAME" property="hotelName"/>
		<result column="ROOM_NAME" property="roomName"/>
		<result column="CHECKIN_DATE" property="checkinDate"/>
		<result column="CHECKOUT_DATE" property="checkoutDate"/>
		<result column="RESERVATION_STATUS" property="reservationStatus"/>
		<result column="PAYMENT_METHOD" property="paymentMethod"/>
		<result column="PAYMENT_AMOUNT" property="paymentAmount"/>
		<result column="PAYMENT_DATE" property="paymentDate"/>
		<result column="RESERVATION_NAME" property="reservationName"/>
		<result column="RESERVATION_PHONE" property="reservationPhone"/>
		<result column="CHECKIN_TIME" property="checkinTime"/>
		<result column="CHECKOUT_TIME" property="checkoutTime"/>
		<result column="FILE_MODIFY_NAME" property="fileModifyName"/>
		
	</resultMap>
	<select id="myInfoBCount1" resultType="_int">
	 select count(*)
	 from RESERVATION join ROOM using(room_id) JOIN HOTEL_IMG using(hotel_Id) JOIN ATTACHED_FILE using(FILE_Id) JOIN HOTEL using(hotel_Id)
		where member_id = #{id} and RESERVATION_STATUS = 'Y' and FILE_THUMBNAIL = 'Y'
	 
	</select>
	<select id="selectReserve" resultMap="reservationResultSet">
		  select *
		from RESERVATION join ROOM using(room_id) JOIN HOTEL_IMG using(hotel_Id) JOIN ATTACHED_FILE using(FILE_Id) JOIN HOTEL using(hotel_Id)
		where member_id = #{id} and RESERVATION_STATUS = 'Y' and FILE_THUMBNAIL = 'Y'
	</select>
	
	
	<resultMap type="AttachedFile" id="attachedFileResultSet">
		<id column="FILE_ID" property="fileId"/>
		<result column="FILE_TYPE" property="fileType"/>
		<result column="FILE_CREATE_DATE" property="fileCreateDate"/>
		<result column="FILE_NAME" property="fileName"/>
		<result column="FILE_MODIFY_NAME" property="fileModifyName"/>
		<result column="FILE_LINK" property="fileLink"/>
		<result column="FILE_STATUS" property="fileStatus"/>
		<result column="FILE_THUMBNAIL" property="fileThumbnail"/>
		</resultMap>
		
		<select id="countMimg" resultType="_int">
		select COUNT(*)
		from Member join re_img using(id) join ATTACHED_FILE using(file_id)
		where id = #{id} and FILE_TYPE = 'M'
		</select>
	
		<select id="selectMimg" resultMap="memberResultSet">
		select *
		from Member join re_img using(id) join ATTACHED_FILE using(file_id)
		where id = #{id} and FILE_TYPE = 'N'
		</select>
	<insert id="insertAttm">
		insert all
			into ATTACHED_FILE
			values(SEQ_FID.nextval, 'D', sysdate, #{attm.fileName}, #{attm.fileModifyName}, #{attm.fileLink}, default, 'Y')
			into RE_IMG
			values  (#{m.id},SEQ_FID.currval)
			select * from dual
		
		
	</insert>
	<select id="myInfoBCount" resultType="_int">
	 select count(*)
	 from QA
	 where QA_WRITER = #{id} and QA_STATUS= 'Y'
	 order by QA_CREATE_DATE desc
	</select>
	
	<resultMap type="QA" id="qaResultSet">
		<id column="QA_ID" property="qaId"/>
		<result column="QA_WRITER" property="qaWriter"/>
		<result column="QA_TITLE" property="qaTitle"/>
		<result column="QA_CONTENT" property="qaContent"/>
		<result column="QA_YN" property="qaYn"/>
		<result column="QA_REPLY_CONTENT" property="qaReplyContent"/>
		<result column="QA_CREATE_DATE" property="qaCreateDate"/>
		<result column="QA_STATUS" property="qaStatus"/>
	</resultMap>
	<select id="selectQA" resultMap="qaResultSet">
		select *
		from QA
		where QA_WRITER = #{id} and  QA_STATUS='Y'
	</select>
	<update id="deleteBB">
  		update QA
  		set QA_STATUS='N'
  		WHERE QA_ID = #{id}
  	</update>
	<resultMap type="Hotel" id="hotelResultSet">
		<id column="HOTEL_ID" property="hotelId"/>
		<result column="ENT_ID" property="entId"/>
		<result column="HOTEL_NAME" property="hotelName"/>
		<result column="HOTEL_PHONE" property="hotelPhone"/>
		<result column="HOTEL_ADDRESS" property="hotelAddress"/>
		<result column="WIFI" property="wifi"/>
		<result column="BREAKFAST" property="breakfast"/>
		<result column="AMENITY" property="amenity"/>
		<result column="PARK" property="park"/>
		<result column="STAR" property="star"/>
		<result column="SWIM" property="swim"/>
		<result column="FITNESS" property="fitness"/>
		<result column="ENT_APPROVAL" property="entApproval"/>
		<result column="MODIFY_DATE" property="modifyDate"/>
		<result column="HOTEL_INFO" property="hotelInfo"/>
		<result column="HOTEL_INTRO" property="hotelIntro"/>
		<result column="HOTEL_STATUS" property="hotelStatus"/>
		<result column="MIN_PRICE" property="minPrice"/>
		<result column="AVG_RATING" property="avgRating"/>
		<result column="HOTEL_GEO_X" property="hotelGeoX"/>
		<result column="HOTEL_GEO_Y" property="hotelGeoY"/>
		<result column="EMPTY_HOTEL" property="emptyHotel"/>
		<result column="MAX_DISTANCE" property="maxDistance"/>
		<result column="FILE_MODIFY_NAME" property="thumbnail"/>
		
	</resultMap>
	<select id="selectHotel" resultMap="hotelResultSet">
		select *
		from hotel join LIKE_HOTEL using(hotel_id) JOIN HOTEL_IMG using(hotel_Id) JOIN ATTACHED_FILE using(FILE_Id)
		where id = #{id} and HOTEL_STATUS = 'Y' and FILE_THUMBNAIL = 'Y'
		order by hotel_id desc
	</select>
	
	<update id="deleteDD">
  		update RESERVATION
  		set RESERVATION_STATUS='N'
  		WHERE RESERVATION_ID = #{id}
  	</update>
  	
  	<select id="myInfoBCount2" resultType="_int">
	 select count(*)
	 from hotel join LIKE_HOTEL using(hotel_id)
		where id = #{id}  and HOTEL_STATUS = 'Y'
	 
	</select>
	<update id="deleteAA">
  		delete from like_hotel
  		where id = #{id} and hotel_Id = #{hotelId}
  	</update>
  	
  		<select id="myInfoBCount3" resultType="_int">
	 select count(*)
	 from PARTY_PARTICIPATE
		where member_id = #{id}  
	 
	</select>
	
	<resultMap type="Party" id="partyResultSet">
		<id column="BOARD_ID" property="partyId"/>
		<result column="BOARD_WRITER" property="partyWriter"/>
		<result column="NICKNAME" property="nickName"/>
		<result column="BOARD_TYPE" property="boardType"/>
		<result column="BOARD_COURSE" property="partyCourse"/>
		<result column="BOARD_TITLE" property="partyTitle"/>
		<result column="BOARD_CONTENT" property="partyContent"/>
		<result column="BOARD_CREATE_DATE" property="createDate"/>
		<result column="BAORD_MODIFY_DATE" property="modifyDate"/>
		<result column="BOARD_AREA" property="partyArea"/>
		<result column="BOARD_STATUS" property="partyStatus"/>
		<result column="MAX_PARTICIPATE" property="maxParticipate"/>
		<result column="PARTY_STARTDATE" property="partyStartDate"/>
		<result column="PARTY_ENDDATE" property="partyEndDate"/>
		<result column="PARTY_GENDER" property="partyGender"/>
		<result column="FILE_MODIFY_NAME" property="thumbnail"/>
	</resultMap>
	<select id="myInfoBCount4" resultType="_int">
		select COUNT(*)
		from board
			 join member on(board_writer = id)
			 join party using(board_id)
			 join board_img using(board_id)
             join attached_file using(file_id)
             join PARTY_PARTICIPATE using (board_id)
             where MEMBER_ID = #{id}
		order by board_id desc

	</select>
	<select id="selectParty" resultMap="partyResultSet">
		select *
		from board
			 join member on(board_writer = id)
			 join party using(board_id)
			 join board_img using(board_id)
             join attached_file using(file_id)
             join PARTY_PARTICIPATE using (board_id)
             where MEMBER_ID = #{id} and BOARD_STATUS ='Y'
		order by board_id desc

	</select>
	<select id="myInfoBCount5" resultType="_int">
		select COUNT(*)
		from board 
		where BOARD_WRITER = #{id} and BOARD_STATUS = 'Y'
	</select>
	
	<select id="seletB" resultMap="BoardResultSet">
		select *
		from board join board_img using (board_id) join ATTACHED_FILE using(file_id)
		where BOARD_WRITER = #{id} and BOARD_STATUS = 'Y' and FILE_THUMBNAIL='Y'
	</select>
	
	<insert id="insertAd">
		insert all
		into ATTACHED_FILE
		values(SEQ_FID.nextval, #{attm.fileType}, sysdate, #{attm.fileName}, #{attm.fileModifyName}, #{attm.fileLink}, default, #{attm.fileThumbnail})
		into AD
		values(SEQ_FID.currval, #{a.boardType}, #{a.price}, #{a.start}, #{a.deadline})
		select * from dual
	</insert>
	
	<select id="selectAttm" resultMap="attachedFileResultSet">
		select *
		from ATTACHED_FILE
		where FILE_ID = #{id}
	</select>
	
	<update id="updateAttm">
		update ATTACHED_FILE
		set FILE_NAME = #{attm.fileName}, FILE_MODIFY_NAME = #{attm.fileModifyName}, FILE_LINK = #{attm.fileLink}
		where FIle_ID = #{beforeFileId}
	</update>
	
	<update id="updateAd">
		update AD
		set AD_PRICE = #{a.price}, START_DATE = #{a.start}, DEADLINE = #{a.deadline}
		where FILE_ID = #{beforeFileId}
	</update>
	
	<select id="reportListCount" resultType="_int">
		select count(*)
		from REPORT
		<if test="search != null">
			where REPORT_TITLE LIKE '%'||#{search}||'%'
		</if>
	</select>
	
	<select id="selectReportList" resultMap="ReportResultSet">
		select *
		from report
		left join REPLY on(TARGET_ID = REPLY_ID)
		left join REVIEW on(TARGET_ID = REVIEW_ID)
		<if test="search != null">
			where REPORT_TITLE LIKE '%'||#{search}||'%'
		</if>
		order by REPORT_ID desc
	</select>
	
	<resultMap type="Report" id="ReportResultSet">
		<id column="REPORT_ID" property="reportId"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="TARGET_ID" property="targetId"/>
		<result column="REPORT_CLASSIFICATION" property="reportClassification"/>
		<result column="REPORT_CONTENT" property="reportContent"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="PROCESSING" property="processing"/>
		<result column="REPORT_TITLE" property="reportTitle"/>
		<result column="REPORT_REPLY" property="reportReply"/>
		<result column="REPLY_CONTENT" property="replyContent"/>
		<result column="REVIEW_CONTENT" property="reviewContent"/>
	</resultMap>
	
	<select id="selectReportE" resultMap="ReportResultSet">
		select *
		from report
		where member_id = #{id}
	</select>
	
	<select id="selectBoardType" resultType="String">
		select BOARD_TYPE
		from board
		where BOARD_ID = #{id}
	</select>
	
	<update id="updateProcessing">
		update report
		set PROCESSING = 'Y'
		where REPORT_ID = #{id}
	</update>
	
	<select id="QACount" resultType="map">
		select qa_date, count
		from (select to_char(QA_CREATE_DATE, 'yy.mm.dd') qa_date, count(*) count
		      from qa
		      GROUP by to_char(QA_CREATE_DATE, 'yy.mm.dd')
		      order by qa_date desc)
		where rownum <![CDATA[<=]]> 7
	</select>
	
	<select id="selectQAList" resultMap="qaResultSet">
		select *
		from qa
		order by to_char(QA_CREATE_DATE, 'yymmdd') desc
	</select>
	
	<select id="qaListCount" resultType="_int">
		select count(*)
		from qa
		order by to_char(QA_CREATE_DATE, 'yymmdd')
	</select>
	
	<insert id="insertQA">
		insert into qa
		values(seq_qaid.nextval, #{qaWriter}, #{qaTitle}, #{qaContent}, default, null, sysdate, default)
	</insert>
	
	<select id="selectQAOne" resultMap="qaResultSet">
		select *
		from qa
		where QA_ID = #{id}
	</select>
	
	<update id="updateQAReply">
		update qa
		set QA_REPLY_CONTENT = #{qaReplyContent}, QA_YN = 'Y'
		where QA_ID = #{qaId}
	</update>
	
	<select id="selectAd" resultType="String">
		select FILE_MODIFY_NAME
		from ATTACHED_FILE
		    join AD using(FILE_ID)
		where BOARD_TYPE = #{type} and to_char(deadline, 'yymmdd') <![CDATA[>=]]> to_char(sysdate, 'yymmdd')
	</select>
	
	<select id="selectPBoardFileId" resultType="_int">
		select FILE_ID
		from ATTACHED_FILE
		left join BOARD_IMG using(FILE_ID)
		left join BOARD using(BOARD_ID)
		where BOARD_ID = #{id}
	</select>
	
	<update id="reportReply">
		update REPORT
		set  REPORT_REPLY = #{content}, PROCESSING = 'Y'
		where REPORT_ID = #{id}
	</update>
	
	<select id="selectBoardId" resultType="String">
		select REF_BOARD_ID
		from reply
		where REPLY_ID = #{id}
	</select>
	
	<select id="selectNList" resultMap="BoardResultSet">
		select *
		from board
		left join BOARD_IMG using(BOARD_ID)
		left join ATTACHED_FILE using(FILE_ID)
		where BOARD_TYPE = 'N' and BOARD_STATUS = 'Y'
		<if test="search != null">
			and BOARD_TITLE LIKE '%'||#{search}||'%'
		</if>
	</select>
	
	<insert id="insertNotice">
		insert
		<if test="attm != null">
			all
		</if>
		into BOARD
		values(seq_bid.nextval, #{b.boardWriter}, 'N', null, #{b.boardTitle}, #{b.boardContent}, sysdate, sysdate, null, default, null)
		<if test="attm != null">
			into ATTACHED_FILE
			values(NEW_FID, #{attm.fileType}, sysdate, #{attm.fileName}, #{attm.fileModifyName}, #{attm.fileLink}, default, #{attm.fileThumbnail})
			into BOARD_IMG
			values(CUR_FID, seq_bid.currval)
			select * from dual
		</if>
	</insert>
	
	<select id="selectNAttm" resultMap="attachedFileResultSet">
		select *
		from ATTACHED_FILE
		join BOARD_IMG using(FILE_ID)
		where BOARD_ID = #{id}
	</select>
	
	<update id="updateNAttm">
		update ATTACHED_FILE
		set FILE_NAME = #{fileName}, FILE_MODIFY_NAME = #{fileModifyName}, FILE_LINK = #{fileLink}
		where FILE_ID = #{fileId}
	</update>
	
	<update id="updateNotice">
		update board
		set BOARD_TITLE = #{boardTitle}, BOARD_CONTENT = #{boardContent}, BOARD_MODIFY_DATE = sysdate
		where BOARD_ID = #{boardId}
	</update>
	
	<insert id="insertNAttm">
		insert all
		into ATTACHED_FILE
		values(NEW_FID, #{attm.fileType}, sysdate, #{attm.fileName}, #{attm.fileModifyName}, #{attm.fileLink}, default, #{attm.fileThumbnail})
		into BOARD_IMG
		values(CUR_FID, #{bId})
		select * from dual
	</insert>
	
	<insert id = "insertMimg">
	insert all
	into ATTACHED_FILE
	values(SEQ_FID.nextval, 'M', sysdate, #{attm.fileName}, #{attm.fileModifyName}, #{attm.fileLink}, default, 'Y')
	into re_img
	values(#{id},SEQ_FID.currval)
	select * from dual
	</insert>
	
	<update id="deleteNotice">
		update board
		set BOARD_STATUS = 'N'
		where BOARD_ID = #{id}
	</update>
	
	<update id="approval">
		update member
		set MEMBER_TYPE = 'H'
		where id = #{id}
	</update>
	
	<update id="soptClrear">
		update member
		set STATUS = 'Y', REPORT = 0, STOP_DATE = null
		where id = #{id}
	</update>
	
	<select id="selectBusinessLicense" resultType="String">
		select FILE_MODIFY_NAME
		from ATTACHED_FILE
		join RE_IMG r using(FILE_ID)
		where r.id = #{id}
	</select>
	
	<select id="getListCountE" resultType="_int">
		select count(*)
		from report
		where MEMBER_ID = #{id}
	</select>
  </mapper>